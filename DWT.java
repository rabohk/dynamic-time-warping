public class DWT {
  static double t1[][] = { { 348.50, 9.65, 309.87 }, { 348.93, 10.35, 313.03 }, { 348.79, 9.09, 308.91 },
      { 346.37, 1.17, 274.80 }, { 320.31, 10.71, 282.84 }, { 13.85, 54.42, 10.00 }, { 2.97, 12.90, 12.76 },
      { 357.47, 347.45, 191.24 }, { 355.62, 340.56, 192.24 }, { 340.99, 331.19, 212.07 }, { 323.81, 328.60, 230.15 },
      { 298.89, 332.73, 254.12 }, { 316.28, 42.47, 313.75 }, { 344.66, 51.06, 347.50 }, { 1.99, 37.09, 2.63 },
      { 355.52, 9.45, 334.79 }, { 347.43, 346.71, 223.34 }, { 348.52, 342.97, 213.54 }, { 354.45, 355.29, 229.70 },
      { 354.85, 4.87, 313.42 }, { 352.11, 5.04, 302.50 }, { 353.12, 5.51, 308.65 }, { 352.87, 5.66, 308.39 },
      { 353.17, 4.43, 302.89 }, { 352.68, 3.73, 296.88 } };

  static double t2[][] = { { 348.35, 4.78, 292.06 }, { 349.55, 4.02, 290.88 }, { 349.31, 4.26, 291.54 },
      { 348.08, 4.06, 288.59 }, { 348.59, 4.04, 289.30 }, { 348.48, 7.88, 304.18 }, { 351.82, 38.67, 349.81 },
      { 354.87, 2.31, 294.22 }, { 355.79, 350.69, 204.17 }, { 354.47, 339.65, 194.63 }, { 345.85, 329.62, 203.27 },
      { 329.67, 324.89, 219.77 }, { 314.64, 320.24, 230.59 }, { 302.48, 347.25, 261.80 }, { 321.66, 19.20, 293.77 },
      { 338.62, 47.93, 340.53 }, { 353.37, 39.42, 351.94 }, { 356.04, 20.40, 349.44 }, { 352.47, 0.60, 274.52 },
      { 354.33, 349.10, 207.27 }, { 355.26, 347.53, 200.54 }, { 356.75, 359.11, 254.73 }, { 354.37, 4.50, 308.62 },
      { 355.32, 4.52, 314.00 }, { 355.71, 4.97, 319.21 } };

  public static void main(String args[]) {
    System.out.println(t1.length + " " + t2.length);
    double dpx[][] = new double[t1.length + 1][t2.length + 1];
    double dpy[][] = new double[t1.length + 1][t2.length + 1];
    double dpz[][] = new double[t1.length + 1][t2.length + 1];
    for (int i = 0; i < t1.length + 1; i++) {
      for (int j = 0; j < t2.length + 1; j++) {
        dpx[i][j] = 999999;
        dpy[i][j] = 999999;
        dpz[i][j] = 999999;
      }
    }

    dpx[0][0] = 0;
    dpy[0][0] = 0;
    dpz[0][0] = 0;

    for (int i = 1; i < t1.length + 1; i++) {
      for (int j = 1; j < t2.length + 1; j++) {
        dpx[i][j] = Math.abs(t1[i - 1][0] - t2[j - 1][0])
            + Math.min(dpx[i - 1][j], Math.min(dpx[i - 1][j - 1], dpx[i][j - 1]));
        dpy[i][j] = Math.abs(t1[i - 1][1] - t2[j - 1][1])
            + Math.min(dpy[i - 1][j], Math.min(dpy[i - 1][j - 1], dpy[i][j - 1]));
        dpz[i][j] = Math.abs(t1[i - 1][2] - t2[j - 1][2])
            + Math.min(dpz[i - 1][j], Math.min(dpz[i - 1][j - 1], dpz[i][j - 1]));
      }
    }

    // for (int i = 0; i < t1.length + 1; i++) {
    // for (int j = 0; j < t2.length + 1; j++) {
    // System.out.print(String.format("%.1f", dpx[i][j]) + ", ");
    // }
    // System.out.print("\n");
    // }

    System.out.println("\n" + dpx[t1.length][t2.length]);
    System.out.println("\n" + dpy[t1.length][t2.length]);
    System.out.println("\n" + dpz[t1.length][t2.length]);

    // int i = 1, j = 1;
    // while (i < t1.length + 1 && j < t2.length + 1) {
    // if (i == t1.length && j == t2.length) {
    // System.out.println("\nPerfect\n");
    // break;
    // }
    // if(dpx[i+1][j]<dpx[i][j])
    // }

    // System.out.println(i + " " + j);

  }

}